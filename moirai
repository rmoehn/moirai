#!/usr/bin/perl

use 5.010;
use warnings;
use strict;

use Readonly;
use YAML::Tiny;
use Data::Dumper;
use Time::Piece;
use Time::Seconds;

Readonly my $TTL_DB_FILE => $ENV{HOME} . '/.moirai';

# Set the modes in which this program can be used
Readonly my $DEFAULT_KEY => 'default';
Readonly my %SUB_FOR => (
    lachesis => \&set_ttl,
    atropos  => \&delete_expired,
    $DEFAULT_KEY  => \&print_help,
);

# Open the TTL database
my $ttl_db = -e $TTL_DB_FILE ? YAML::Tiny->read($TTL_DB_FILE)
                             : YAML::Tiny->new();
if (!defined $ttl_db) {
    die "Cannot read from $TTL_DB_FILE: ", $ttl_db->errstr();
}

# Act according to the user's request
my $command = shift @ARGV || $DEFAULT_KEY;
if (!exists $SUB_FOR{$command}) {
    $command = $DEFAULT_KEY;
}
$SUB_FOR{$command}->($ttl_db, @ARGV);

# Write modifications to the database
$ttl_db->write($TTL_DB_FILE)
    or die "Cannot write to $TTL_DB_FILE: ", $ttl_db->errstr();

# Update the expiry time for a given file or glob
sub set_ttl {
    my $ttl_db = shift;
    my $glob   = shift;
    my $ttl    = shift;

    # Check for relative paths
    if ($glob !~ m{\A ~}xms and $glob !~ m{\A /}xms) {
        die "No relative paths allowed.\n";
    }

    $ttl_db->[0]->{$glob} = $ttl;
}

# Delete all files that have expired
sub delete_expired {
    say 'Would delete all expired files.';
}

# Emit a helpful message
sub print_help {
    say 'Usage:';
    say '    moirai lachesis <filename>|"<glob>" <time to live>';
    say '    moirai atropos';

    exit 1;
}
